{"version":3,"file":"gql-4d0e6458.js","sources":["../../../../../src/lib/utils/gql.ts"],"sourcesContent":["import type { OperationStore } from '@urql/svelte/dist/types/operationStore';\nimport { get, readable } from 'svelte/store';\nimport type { Load } from '@sveltejs/kit';\nimport { browser } from '$app/env';\nimport { gqlClient } from '$lib/stores/global';\n\nexport const loadWaitForNoFetch = (queries: { [key: string]: OperationStore }): Load => {\n  return async function () {\n    if (!browser) {\n      return {\n        props: Object.fromEntries(\n          await Promise.all(\n            Object.keys(queries).map((key) => {\n              const query = queries[key];\n              return get(gqlClient)\n                .query(query.query, query.variables, query.context)\n                .toPromise()\n                .then((data) => [key, readable(data)]);\n            })\n          )\n        )\n      };\n    }\n\n    return {\n      props: queries\n    };\n  };\n};\n"],"names":[],"mappings":"kCAMa,GAAqB,AAAC,GAC1B,gBAAkB,OAiBhB,CACL,MAAO"}