{"version":3,"file":"navigation-51f4a605.js","sources":["../../../../build/runtime/app/navigation.js"],"sourcesContent":["import { router as router$1 } from '../internal/singletons.js';\nimport { g as get_base_uri } from '../chunks/utils.js';\n\nconst router = /** @type {import('../client/router').Router} */ (router$1);\n\n/**\n * @param {string} name\n */\nfunction guard(name) {\n\treturn () => {\n\t\tthrow new Error(`Cannot call ${name}(...) on the server`);\n\t};\n}\n\nconst goto = import.meta.env.SSR ? guard('goto') : goto_;\nconst invalidate = import.meta.env.SSR ? guard('invalidate') : invalidate_;\nconst prefetch = import.meta.env.SSR ? guard('prefetch') : prefetch_;\nconst prefetchRoutes = import.meta.env.SSR ? guard('prefetchRoutes') : prefetchRoutes_;\n\n/**\n * @type {import('$app/navigation').goto}\n */\nasync function goto_(href, opts) {\n\treturn router.goto(href, opts, []);\n}\n\n/**\n * @type {import('$app/navigation').invalidate}\n */\nasync function invalidate_(resource) {\n\tconst { href } = new URL(resource, location.href);\n\treturn router.renderer.invalidate(href);\n}\n\n/**\n * @type {import('$app/navigation').prefetch}\n */\nfunction prefetch_(href) {\n\treturn router.prefetch(new URL(href, get_base_uri(document)));\n}\n\n/**\n * @type {import('$app/navigation').prefetchRoutes}\n */\nasync function prefetchRoutes_(pathnames) {\n\tconst matching = pathnames\n\t\t? router.routes.filter((route) => pathnames.some((pathname) => route[0].test(pathname)))\n\t\t: router.routes;\n\n\tconst promises = matching.map((r) => Promise.all(r[1].map((load) => load())));\n\n\tawait Promise.all(promises);\n}\n\nexport { goto, invalidate, prefetch, prefetchRoutes };\n"],"names":[],"mappings":"wCAGA,KAAM,GAA2D,EAW3D,EAA6C,EAQnD,iBAAqB,EAAM,EAAM,CAChC,MAAO,GAAO,KAAK,EAAM,EAAM"}