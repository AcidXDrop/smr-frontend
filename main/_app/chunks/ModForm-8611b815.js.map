{"version":3,"file":"ModForm-8611b815.js","sources":["../../../../../src/lib/models/mods.ts","../../../../../src/lib/components/mods/ModForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type ModData = {\n  name: string;\n  mod_reference: string;\n  short_description: string;\n  full_description?: string;\n  logo?: string;\n  source_url?: string;\n};\n\nexport const modSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  mod_reference: zod\n    .string()\n    .min(3)\n    .max(32)\n    .regex(/^([a-zA-Z][a-zA-Z0-9_]*)$/)\n    .refine(async () => {\n      // TODO Check if mod reference exists\n      return true;\n    }),\n  short_description: zod.string().min(16).max(128),\n  full_description: zod.optional(zod.string()),\n  logo: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n  source_url: zod.string().url().optional().or(zod.literal(''))\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { ModData } from '$lib/models/mods';\n  import { modSchema } from '$lib/models/mods';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import HelperText from '@smui/textfield/helper-text';\n  import Button from '@smui/button';\n\n  export let onSubmit: (data: ModData) => void;\n  export let initialValues: ModData = {\n    full_description: '',\n    mod_reference: '',\n    name: '',\n    short_description: '',\n    source_url: ''\n  };\n  export let submitText = 'Create';\n\n  export let editing = false;\n\n  const { form, data } = createForm<ModData>({\n    initialValues: initialValues,\n    extend: [validator, svelteReporter],\n    validateSchema: modSchema,\n    onSubmit: (data) => onSubmit(trimNonSchema(data, modSchema))\n  });\n\n  $: preview = ($data.full_description as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.mod_reference} label=\"Mod Reference\" required disabled={editing}>\n        <HelperText persistent={!editing} slot=\"helper\">\n          {#if !editing}\n            Warning! You will not be able to change this after creating the mod! Please ensure this is a unique modifier\n            that closely matches the name of your mod!\n          {/if}\n        </HelperText>\n      </Textfield>\n      <ValidationMessage for=\"mod_reference\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield textarea bind:value={$data.full_description} label=\"Full Description\" required input$rows={10} />\n        <ValidationMessage for=\"full_description\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"logo\">Logo:</label>\n      <input\n        id=\"logo\"\n        class=\"base-input\"\n        name=\"logo\"\n        type=\"file\"\n        accept=\"image/png,image/jpeg,image/gif\"\n        placeholder=\"Logo\"\n      />\n      <ValidationMessage for=\"logo\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.source_url} label=\"Source URL\" />\n      <ValidationMessage for=\"source_url\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["zod.object","zod.string","zod.optional","zod.any","zod.literal","createForm","validator"],"mappings":"wcAWa,IAAYA,GAAW,CAClC,KAAMC,KAAa,IAAI,GAAG,IAAI,IAC9B,cAAeA,KAEZ,IAAI,GACJ,IAAI,IACJ,MAAM,6BACN,OAAO,SAEC,IAEX,kBAAmBA,KAAa,IAAI,IAAI,IAAI,KAC5C,iBAAkBC,GAAaD,MAC/B,KAAMC,GAAaC,KAAU,OAAO,AAAC,GAAS,QAAU,IAAQ,QAAU,IAAQ,QAAU,KAC5F,WAAYF,KAAa,MAAM,WAAW,GAAGG,GAAY,8BCcjB,QAAW,wKAA7C,uCAAkC,QAAW,qEAO9B;AAAA,qEAAA;AAAA,kHAAP,kGAAA,mJADiB,yKAAA,4JAQS,QAAW,wKAA7C,uCAAkC,QAAW,wDAOX,QAAW,wKAA7C,uCAAkC,QAAW,wDAQT,QAAW,wKAA7C,uCAAkC,QAAW,mGAMF,yKAA3C,2CAA2C,6GAgBX,QAAW,wKAA7C,uCAAkC,QAAW,wDAOX,QAAW,wKAA7C,uCAAkC,QAAW,qEAKL,kBAAA,yCAAA,qOAjEnB,KAAM,yBAAN,KAAM,qHACe,yBAAA,6GAMyC,4CAA9D,KAAM,kCAAN,KAAM,uIAQwB,yBAAA,0GAM9B,KAAM,sCAAN,KAAM,+IAC4B,yBAAA,+HAO+C,IAAtE,KAAM,qCAAN,KAAM,6IACkB,yBAAA,gIAMhD,GAAS,qEAgByB,yBAAA,6FAMrB,MAAM,+BAAN,KAAM,iIACqB,yBAAA,8aAxB1C,oEAQU,wuBARV,qKAQU,26BA9CxB,SACE,OACE,8CAOA,+CAcA,+CAOA,OACE,+CAMA,OACE,wFAOJ,OACE,yBACA,mCAaF,+CAOA,gHAhEyB,KAAM,mHAOwD,oEAA9D,KAAM,qIAcN,KAAM,2IAQK,KAAM,8HAO9B,GAAS,4HAsBI,KAAM,wxBAnFnC,eACA,iBACA,iBAAA,GACA,cAAA,GACA,KAAA,GACA,kBAAA,GACA,WAAA,QAEA,aAAA,aAEA,WAAA,YAEA,OAAA,QAAAC,IACA,gBACA,QAAAC,GAAA,IACA,eAAA,GACA,SAAA,GAAA,EAAA,GAAA,EAAA,yDAS6B,EAAM,SAAN,GAAM,+CAON,EAAM,kBAAN,GAAM,uDAcN,EAAM,sBAAN,GAAM,4DAQK,EAAM,qBAAN,GAAM,0DA6BjB,EAAM,eAAN,GAAM,mOAhEnC,EAAA,EAAA,kBAAA"}