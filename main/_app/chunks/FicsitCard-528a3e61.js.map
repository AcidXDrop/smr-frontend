{"version":3,"file":"FicsitCard-528a3e61.js","sources":["../../../../../src/lib/thirdparty/lru_cache.ts","../../../../../src/lib/utils/image-cache.ts","../../../../../src/lib/components/general/Image.svelte","../../../../../src/lib/components/general/FicsitCard.svelte"],"sourcesContent":["/*\nThe ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/* eslint-disable */\n\n// A linked list to keep track of recently-used-ness\nimport Yallist from 'yallist';\n\nconst MAX = Symbol('max');\nconst LENGTH = Symbol('length');\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator');\nconst ALLOW_STALE = Symbol('allowStale');\nconst MAX_AGE = Symbol('maxAge');\nconst DISPOSE = Symbol('dispose');\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet');\nconst LRU_LIST = Symbol('lruList');\nconst CACHE = Symbol('cache');\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet');\n\nconst naiveLength = () => 1;\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nexport class LRUCache {\n  constructor(options) {\n    if (typeof options === 'number') options = { max: options };\n\n    if (!options) options = {};\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number');\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = (this[MAX] = options.max || Infinity);\n\n    const lc = options.length || naiveLength;\n    this[LENGTH_CALCULATOR] = typeof lc !== 'function' ? naiveLength : lc;\n    this[ALLOW_STALE] = options.stale || false;\n    if (options.maxAge && typeof options.maxAge !== 'number') throw new TypeError('maxAge must be a number');\n    this[MAX_AGE] = options.maxAge || 0;\n    this[DISPOSE] = options.dispose;\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;\n    this.reset();\n  }\n\n  // resize the cache when the max changes.\n  set max(mL) {\n    if (typeof mL !== 'number' || mL < 0) throw new TypeError('max must be a non-negative number');\n\n    this[MAX] = mL || Infinity;\n    trim(this);\n  }\n\n  get max() {\n    return this[MAX];\n  }\n\n  set allowStale(allowStale) {\n    this[ALLOW_STALE] = !!allowStale;\n  }\n\n  get allowStale() {\n    return this[ALLOW_STALE];\n  }\n\n  set maxAge(mA) {\n    if (typeof mA !== 'number') throw new TypeError('maxAge must be a non-negative number');\n\n    this[MAX_AGE] = mA;\n    trim(this);\n  }\n\n  get maxAge() {\n    return this[MAX_AGE];\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator(lC) {\n    if (typeof lC !== 'function') lC = naiveLength;\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC;\n      this[LENGTH] = 0;\n      this[LRU_LIST].forEach((hit) => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n        this[LENGTH] += hit.length;\n      });\n    }\n    trim(this);\n  }\n\n  get lengthCalculator() {\n    return this[LENGTH_CALCULATOR];\n  }\n\n  get length() {\n    return this[LENGTH];\n  }\n\n  get itemCount() {\n    return this[LRU_LIST].length;\n  }\n\n  rforEach(fn, thisp) {\n    thisp = thisp || this;\n    for (let walker = this[LRU_LIST].tail; walker !== null; ) {\n      const prev = walker.prev;\n      forEachStep(this, fn, walker, thisp);\n      walker = prev;\n    }\n  }\n\n  forEach(fn, thisp) {\n    thisp = thisp || this;\n    for (let walker = this[LRU_LIST].head; walker !== null; ) {\n      const next = walker.next;\n      forEachStep(this, fn, walker, thisp);\n      walker = next;\n    }\n  }\n\n  keys() {\n    return this[LRU_LIST].toArray().map((k) => k.key);\n  }\n\n  values() {\n    return this[LRU_LIST].toArray().map((k) => k.value);\n  }\n\n  reset() {\n    if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {\n      this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));\n    }\n\n    this[CACHE] = new Map(); // hash of items by key\n    this[LRU_LIST] = new Yallist(); // list of items in order of use recency\n    this[LENGTH] = 0; // length of items in the list\n  }\n\n  dump() {\n    return this[LRU_LIST].map((hit) =>\n      isStale(this, hit)\n        ? false\n        : {\n            k: hit.key,\n            v: hit.value,\n            e: hit.now + (hit.maxAge || 0)\n          }\n    )\n      .toArray()\n      .filter((h) => h);\n  }\n\n  dumpLru() {\n    return this[LRU_LIST];\n  }\n\n  set(key, value, maxAge?) {\n    maxAge = maxAge || this[MAX_AGE];\n\n    if (maxAge && typeof maxAge !== 'number') throw new TypeError('maxAge must be a number');\n\n    const now = maxAge ? Date.now() : 0;\n    const len = this[LENGTH_CALCULATOR](value, key);\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key));\n        return false;\n      }\n\n      const node = this[CACHE].get(key);\n      const item = node.value;\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);\n      }\n\n      item.now = now;\n      item.maxAge = maxAge;\n      item.value = value;\n      this[LENGTH] += len - item.length;\n      item.length = len;\n      this.get(key);\n      trim(this);\n      return true;\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge);\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE]) this[DISPOSE](key, value);\n\n      return false;\n    }\n\n    this[LENGTH] += hit.length;\n    this[LRU_LIST].unshift(hit);\n    this[CACHE].set(key, this[LRU_LIST].head);\n    trim(this);\n    return true;\n  }\n\n  has(key) {\n    if (!this[CACHE].has(key)) return false;\n    const hit = this[CACHE].get(key).value;\n    return !isStale(this, hit);\n  }\n\n  get(key) {\n    return get(this, key, true);\n  }\n\n  peek(key) {\n    return get(this, key, false);\n  }\n\n  pop() {\n    const node = this[LRU_LIST].tail;\n    if (!node) return null;\n\n    del(this, node);\n    return node.value;\n  }\n\n  del(key) {\n    del(this, this[CACHE].get(key));\n  }\n\n  load(arr) {\n    // reset the cache\n    this.reset();\n\n    const now = Date.now();\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l];\n      const expiresAt = hit.e || 0;\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v);\n      else {\n        const maxAge = expiresAt - now;\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge);\n        }\n      }\n    }\n  }\n\n  prune() {\n    this[CACHE].forEach((value, key) => get(this, key, false));\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key);\n  if (node) {\n    const hit = node.value;\n    if (isStale(self, hit)) {\n      del(self, node);\n      if (!self[ALLOW_STALE]) return undefined;\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET]) node.value.now = Date.now();\n        self[LRU_LIST].unshiftNode(node);\n      }\n    }\n    return hit.value;\n  }\n};\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) return false;\n\n  const diff = Date.now() - hit.now;\n  return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];\n};\n\nconst trim = (self) => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail; self[LENGTH] > self[MAX] && walker !== null; ) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev;\n      del(self, walker);\n      walker = prev;\n    }\n  }\n};\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value;\n    if (self[DISPOSE]) self[DISPOSE](hit.key, hit.value);\n\n    self[LENGTH] -= hit.length;\n    self[CACHE].delete(hit.key);\n    self[LRU_LIST].removeNode(node);\n  }\n};\n\nclass Entry {\n  key: number;\n  value: number;\n  length: number;\n  now: number;\n  maxAge: number;\n\n  constructor(key, value, length, now, maxAge) {\n    this.key = key;\n    this.value = value;\n    this.length = length;\n    this.now = now;\n    this.maxAge = maxAge || 0;\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value;\n  if (isStale(self, hit)) {\n    del(self, node);\n    if (!self[ALLOW_STALE]) hit = undefined;\n  }\n  if (hit) fn.call(thisp, hit.value, hit.key, self);\n};\n","import { LRUCache } from '../thirdparty/lru_cache';\n\nexport const imageCache = new LRUCache({\n  max: 500,\n  maxAge: 1000 * 60\n});\n","<script lang=\"ts\">\n  import { browser } from '$app/env';\n  import { imageCache } from '$lib/utils/image-cache';\n\n  let src = $$props['src'];\n\n  if (browser) {\n    if (imageCache.has($$props['src'])) {\n      src = imageCache.get($$props['src']);\n    } else {\n      const img = new Image();\n      img.crossOrigin = 'Anonymous';\n      img.onload = () => {\n        const canvas = document.createElement('CANVAS') as HTMLCanvasElement;\n        const ctx = canvas.getContext('2d');\n        canvas.height = img.naturalHeight;\n        canvas.width = img.naturalWidth;\n        ctx.drawImage(img, 0, 0);\n        const dataURL = canvas.toDataURL();\n        src = dataURL;\n        imageCache.set($$props['src'], dataURL);\n      };\n      img.src = $$props['src'];\n    }\n  }\n\n  $: sourceLess = {\n    ...$$props,\n    src: undefined\n  };\n</script>\n\n<img {...sourceLess} alt={$$props['alt']} {src} />\n","<script lang=\"ts\">\n  import { assets } from '$app/paths';\n  import Card, { Content, Actions } from '@smui/card';\n  import IconButton, { Icon } from '@smui/icon-button';\n  import { goto, prefetch } from '$app/navigation';\n  import Image from '$lib/components/general/Image.svelte';\n\n  export let name = '';\n  export let logo = assets + '/images/no_image.png';\n  export let description = '';\n  export let link = '/';\n  export let fake = false;\n\n  $: renderedLogo = logo || assets + '/images/no_image.png';\n  $: renderedName = name || (fake && 'Card Name');\n  $: renderedDescription = description || (fake && 'Short card description');\n\n  let preloaded = false;\n  let timeoutHandle: number;\n  const onOver = () => {\n    if (preloaded) {\n      return;\n    }\n\n    timeoutHandle = setTimeout(() => {\n      preloaded = true;\n      prefetch(link);\n    }, 250) as unknown as number;\n  };\n\n  const onOut = () => {\n    if (preloaded) {\n      return;\n    }\n\n    clearTimeout(timeoutHandle);\n  };\n</script>\n\n<Card class=\"h-full overflow-hidden\" on:mouseover={onOver} on:mouseout={onOut}>\n  <div\n    class:text-gray-500={fake}\n    class:font-flow={fake}\n    class=\"grid grid-max-auto sm:grid-cols-2 grid-cols-1 justify-items-center\"\n  >\n    <div class=\"cursor-pointer card-image-container\" on:click={() => goto(link)}>\n      {#if fake}\n        <div class=\"bg-gray-500 logo min-w-full min-h-full max-w-full max-h-full\" />\n      {:else}\n        <Image src={renderedLogo} alt=\"{renderedName} Logo\" class=\"logo max-w-full max-h-full\" />\n      {/if}\n    </div>\n    <div class=\"w-full flex flex-col justify-between\">\n      <Content class=\"flex flex-col pb-0\">\n        <div class=\"mb-2\">\n          <a href={link} class=\"text-white\">\n            <span class=\"text-xl break-words\">{renderedName}</span>\n          </a>\n\n          <h5 class=\"text-sm m-0\">\n            <slot name=\"stats\">\n              {#if fake}\n                <span class=\"font-flow\">Card stats</span>\n              {/if}\n            </slot>\n          </h5>\n        </div>\n\n        <div class:font-flow={fake} class=\"break-words\">\n          {renderedDescription}\n        </div>\n      </Content>\n\n      <Actions class=\"self-end\">\n        {#if !fake}\n          <IconButton href={link} aria-label=\"View {renderedName}\" title=\"View {renderedName}\">\n            <Icon class=\"material-icons\">info</Icon>\n          </IconButton>\n          <slot name=\"actions\" />\n        {/if}\n      </Actions>\n    </div>\n  </div>\n\n  <slot name=\"outer\" />\n</Card>\n\n<style lang=\"postcss\">\n  .logo {\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  @media (min-width: 1279px) {\n    .grid-max-auto {\n      grid-template-columns: max-content auto;\n    }\n  }\n</style>\n"],"names":["Yallist"],"mappings":"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"}