{"version":3,"file":"ModForm-277e0f76.js","sources":["../../../../../src/lib/models/mods.ts","../../../../../src/lib/components/mods/ModForm.svelte"],"sourcesContent":["import * as zod from \"zod\";\n\nexport type ModData = {\n  name: string;\n  mod_reference: string;\n  short_description: string;\n  full_description?: string;\n  logo?: string;\n  source_url?: string;\n}\n\nexport const modSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  mod_reference: zod.string().min(3).max(32).regex(/^([a-zA-Z][a-zA-Z0-9_]*)$/).refine(async () => {\n    // TODO Check if mod reference exists\n    return true;\n  }),\n  short_description: zod.string().min(16).max(128),\n  full_description: zod.optional(zod.string()),\n  logo: zod.optional(zod.any().refine(logo => 'name' in logo && 'size' in logo && 'type' in logo)),\n  source_url: zod.string().url().optional().or(zod.literal('')),\n});\n","<script lang=\"ts\">\n  import {createForm} from 'felte';\n  import {validator} from '@felte/validator-zod';\n  import {svelteReporter, ValidationMessage} from '@felte/reporter-svelte';\n  import type {ModData} from \"$lib/models/mods\";\n  import {modSchema} from \"$lib/models/mods\";\n  import {trimNonSchema} from \"$lib/utils/forms\";\n  import {markdown} from '$lib/utils/markdown';\n\n  export let onSubmit: (data: ModData) => void;\n  export let initialValues: ModData | undefined = undefined;\n  export let submitText = 'Create';\n\n  export let editing = false;\n\n  const {form, data} = createForm<ModData>({\n    initialValues: initialValues,\n    extend: [validator, svelteReporter],\n    validateSchema: modSchema,\n    onSubmit: (data) => onSubmit(trimNonSchema(data, modSchema)),\n  });\n\n  $: preview = ($data.full_description as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" class=\"base-input\" name=\"name\" type=\"text\" placeholder=\"Name\">\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"mod_reference\">Mod Reference:</label>\n      <input id=\"mod_reference\" class=\"base-input\" name=\"mod_reference\" type=\"text\" placeholder=\"Mod Reference\"\n             readonly={editing}>\n      <ValidationMessage for=\"mod_reference\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"short_description\">Short Description:</label>\n      <input id=\"short_description\" class=\"base-input\" name=\"short_description\" type=\"text\"\n             placeholder=\"Short Description\">\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <label for=\"full_description\">Full Description:</label>\n        <textarea class=\"base-input\" id=\"full_description\" name=\"full_description\" placeholder=\"Full Description\"\n                  rows=\"10\"></textarea>\n        <ValidationMessage for=\"full_description\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{ @html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"logo\">Logo:</label>\n      <input id=\"logo\" class=\"base-input\" name=\"logo\" type=\"file\" accept=\"image/png,image/jpeg,image/gif\"\n             placeholder=\"Logo\">\n      <ValidationMessage for=\"logo\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"source_url\">Source URL:</label>\n      <input id=\"source_url\" class=\"base-input\" name=\"source_url\" type=\"text\" placeholder=\"Source URL\">\n      <ValidationMessage for=\"source_url\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <input type=\"submit\" value={submitText} class=\"px-4 py-2 rounded text-base bg-blue-500 cursor-pointer\">\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["modSchema","zod.object","name","zod.string","min","max","mod_reference","regex","refine","async","short_description","full_description","zod.optional","logo","zod.any","source_url","url","optional","or","zod.literal","ctx","ctx2","message","markdown","onSubmit","initialValues","submitText","editing","form","data","createForm","extend","validator","svelteReporter","validateSchema","trimNonSchema","data2","preview","$data"],"mappings":"4XAWaA,EAAYC,EAAW,CAClCC,KAAMC,IAAaC,IAAI,GAAGC,IAAI,IAC9BC,cAAeH,IAAaC,IAAI,GAAGC,IAAI,IAAIE,MAAM,6BAA6BC,QAAOC,UAE5E,IAETC,kBAAmBP,IAAaC,IAAI,IAAIC,IAAI,KAC5CM,iBAAkBC,EAAaT,KAC/BU,KAAMD,EAAaE,IAAUN,WAAe,SAAUK,GAAQ,SAAUA,GAAQ,SAAUA,KAC1FE,WAAYZ,IAAaa,MAAMC,WAAWC,GAAGC,EAAY,sCCWN,mNAAA,+DASA,mNAAA,+DASA,mNAAA,+DAUE,mNAAA,gGAMDC,2MAAAC,mHAUD,mNAAA,+DAQA,mNAAA,gRArDHC,wBAAAA,qGASSA,wBAAAA,0GASIA,wBAAAA,yGAUCA,wBAAAA,kIAMhDC,EAASH,qEAUyBE,wBAAAA,mGAQMA,wBAAAA,0FAtDhC,qFAQS,8FASI,qHAUC,2GAQxB,sEAQU,6FASM,wPApDN,sNAQS,+NASI,iRAUC,yPAQxB,kKAQU,0OASM,2lBA1CPF,yhCAkDWA,qzBAlDXA,0MA0BPG,EAASH,sKAwBSA,oZA/ErBI,oBACAC,iBACAC,EAAa,qBAEbC,GAAU,gBAEdC,OAAMC,GAAQC,GACJL,cAAAA,EACfM,QAASC,EAAWC,GACpBC,eAAgBlC,EAChBwB,YAAoBA,EAASW,EAAcC,EAAMpC,wOAGhDqC,EAAWC,EAAM3B,kBAA+B"}