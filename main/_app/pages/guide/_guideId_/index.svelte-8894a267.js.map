{"version":3,"file":"index.svelte-8894a267.js","sources":["../../../../../../../src/lib/components/guides/GuideInfo.svelte","../../../../../../../src/lib/components/guides/GuideAuthor.svelte","../../../../../../../src/routes/guide/[guideId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { Guide } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n\n  export let guide!: Pick<Guide, 'created_at'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <!-- TODO Nice Date -->\n      <span><strong>Created:</strong> {guide.created_at}</span><br />\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import { base } from '$app/paths';\n  import Card, { Content } from '@smui/card';\n\n  export let author: Pick<User, 'id' | 'username' | 'avatar'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"grid grid-flow-row gap-y-2\">\n      <h3 class=\"text-2xl my-4 font-bold\">Author</h3>\n\n      <div class=\"grid auto-rows-min text-lg gap-y-4\">\n        <div class=\"grid grid-flow-col auto-cols-min gap-x-4\">\n          <div class=\"rounded-full bg-cover w-14 h-14\" style={`background-image: url(\"${author.avatar}\")`} />\n          <div class=\"grid grid-flow-row\">\n            <a href=\"{base}/user/{author.id}/\" class=\"text-yellow-500 underline\">{author.username}</a>\n            <div>Writer</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetGuideDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n\n  const guideQ = operationStore(GetGuideDocument, { guide: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    guideQ.variables.guide = input.page.params.guideId;\n    return loadWaitForNoFetch({\n      guide: guideQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation, query } from '@urql/svelte';\n  import { DeleteGuideDocument } from '$lib/generated';\n  import GuideInfo from '$lib/components/guides/GuideInfo.svelte';\n  import GuideAuthor from '$lib/components/guides/GuideAuthor.svelte';\n  import { user } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { writable } from 'svelte/store';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import { base } from '$app/paths';\n  import { browser } from '$app/env';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import Button from '@smui/button';\n\n  export let guideId!: string;\n  export let guide: typeof guideQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const deleteGuide = mutation({\n    query: DeleteGuideDocument\n  });\n\n  $: canUserEdit = $user?.roles?.deleteContent || $user?.id === $guide?.data?.getGuide?.user?.id;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteGuideFn = () => {\n    deleteGuide({ guideId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting guide: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/guides');\n      }\n    });\n  };\n\n  $: if (!errorToast) errorMessage = '';\n\n  if (browser) {\n    query(guide);\n  }\n</script>\n\n<svelte:head>\n  {#if !$guide.fetching && !$guide.error && $guide.data.getGuide}\n    <MetaDescriptors description={$guide.data.getGuide.short_description} title={$guide.data.getGuide.name} />\n  {/if}\n</svelte:head>\n\n{#if $guide.fetching}\n  <p>Loading...</p>\n{:else if $guide.error}\n  <p>Oh no... {$guide.error.message}</p>\n{:else if $guide.data.getGuide}\n  <div class=\"grid gap-8 grid-auto-max\">\n    <div class=\"grid grid-cols-1 auto-rows-min gap-4\">\n      <div class=\"grid grid-flow-col grid-auto-max h-auto gap-4 items-center\">\n        <h1 class=\"text-4xl my-4 font-bold\">{$guide.data.getGuide.name}</h1>\n\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/guide/' + guideId + '/edit')}>Edit</Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n      </div>\n      <Card>\n        <Content>\n          <div class=\"markdown-content\">\n            {#await markdown($guide.data.getGuide.guide) then guideRendered}\n              <p>{@html guideRendered}</p>\n            {/await}\n          </div>\n        </Content>\n      </Card>\n    </div>\n    <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n      <GuideInfo guide={$guide.data.getGuide} />\n      <GuideAuthor author={$guide.data.getGuide.user} />\n    </div>\n  </div>\n\n  <Dialog bind:open={$deleteDialogOpen}>\n    <Title>Delete Guide?</Title>\n    <DialogContent>\n      <div class=\"grid grid-flow-row gap-4\">\n        <span>Are you sure you wish to delete this guide</span>\n\n        <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n        <Button variant=\"outlined\" on:click={() => deleteGuideFn()}>Delete</Button>\n      </div>\n    </DialogContent>\n  </Dialog>\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n\n<style lang=\"postcss\">\n  .grid-auto-max {\n    grid-template-columns: auto max-content max-content;\n  }\n</style>\n"],"names":[],"mappings":"ggCAYuC,KAAM,sDAFH,4CAEtB,6HAFsB,4FAEtB,sKAHhB,SACE,qBAEA,OAAM,4BAAmD,2BAAxB,KAAM,wpBAR7C,oLCakF,KAAO,0DAN/C,uGAOzB,oGAPyB,sSAOzB,uNAHuE,KAAO,4BAEzE,YAAY,KAAO,gPAPrC,SACE,qBAEA,OACE,OACE,cACA,OACE,qBACA,4DAH4E,KAAO,wCAEb,KAAO,oCAAnE,YAAY,KAAO,ypBAZzC,wMCgEkC,KAAO,KAAK,SAAS,wBAA0B,KAAO,KAAK,SAAS,oHAApE,KAAO,KAAK,SAAS,iCAA0B,KAAO,KAAK,SAAS,oIAmD7E,mBAAA,iFAvCoB,KAAO,KAAK,SAAS,0CAErD,8FAgBW,KAAO,KAAK,oCACT,KAAO,KAAK,SAAS,8EAI3B,uBAAA,mIAYE,4BAAA,68BAtCrB,SACE,OACE,OACE,8DAiBJ,yGAjByC,KAAO,KAAK,SAAS,iBAErD,2LAgBW,KAAO,KAAK,8CACT,KAAO,KAAK,SAAS,wFAI3B,0GAYE,gWAxCR,KAAO,MAAM,qCAAvB,yDAAA,2CAAH,2CAAa,KAAO,MAAM,2FAFvB,mDAAA,mCAAH,isBAU+F,oBAAA,6EAChB,sBAAA,6GAOzD,iFAAV,2CAAU,4MADJ,GAAS,KAAO,KAAK,SAAS,wKADxC,gGACU,GAAS,KAAO,KAAK,SAAS,iaAcvC,6BAAA,sFAKqE,sBAAA,+EACZ,sBAAA,yTAHtD,gLAAA,0LADR,SACE,64BASG,8CAAA,2BAAP,kCAAO,wDAjDH,KAAO,WAAa,KAAO,OAAS,KAAO,KAAK,iEAKnD,MAAO,WAEF,KAAO,QAEP,KAAO,KAAK,qSATd,KAAO,WAAa,KAAO,OAAS,KAAO,KAAK,oWA9DxD,IAAA,GAAA,IAAA,MAAA,SAEA,GAAA,QAAA,IACA,IAAA,UAAA,MAAA,EAAA,KAAA,OAAA,QACA,IACA,MAAA,KACA,iIAqBA,cACA,kBAEA,GAAA,GACA,EAAA,QAEA,GAAA,IACA,MAAA,KAKA,EAAA,GAAA,6BAEA,QACA,GAAA,YAAA,KAAA,IACA,EAAA,MACA,SAAA,MAAA,EAAA,MAAA,aACA,EAAA,yBAAA,EAAA,MAAA,aACA,EAAA,KAGA,GAAA,EAAA,cAQA,GAAA,eAqBqD,GAAK,EAAO,UAAY,EAAU,eAClC,EAAiB,IAAI,UAyBvB,EAAiB,IAAI,UACrB,kBAP9B,2BAYE,mIAzEvB,EAAA,GAAA,OAAA,eAAA,GAAA,KAAA,GAAA,MAAA,UAAA,MAAA,kBAiBA,QAAA,EAAA"}