{"version":3,"file":"index.svelte-ae385343.js","sources":["../../../../../../../src/lib/components/guides/GuideInfo.svelte","../../../../../../../src/lib/components/guides/GuideAuthor.svelte","../../../../../../../src/routes/guide/[guideId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { Guide } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n\n  export let guide!: Pick<Guide, 'created_at'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <!-- TODO Nice Date -->\n      <span><strong>Created:</strong> {guide.created_at}</span><br />\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import { base } from '$app/paths';\n  import Card, { Content } from '@smui/card';\n\n  export let author: Pick<User, 'id' | 'username' | 'avatar'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"grid grid-flow-row gap-y-2\">\n      <h3 class=\"text-2xl my-4 font-bold\">Author</h3>\n\n      <div class=\"grid auto-rows-min text-lg gap-y-4\">\n        <div class=\"grid grid-flow-col auto-cols-min gap-x-4\">\n          <div class=\"rounded-full bg-cover w-14 h-14\" style={`background-image: url(\"${author.avatar}\")`} />\n          <div class=\"grid grid-flow-row\">\n            <a href=\"{base}/user/{author.id}/\" class=\"text-yellow-500 underline\">{author.username}</a>\n            <div>Writer</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetGuideDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n\n  const guideQ = operationStore(GetGuideDocument, { guide: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    guideQ.variables.guide = input.params.guideId;\n    return loadWaitForNoFetch({\n      guide: guideQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation, query } from '@urql/svelte';\n  import { DeleteGuideDocument } from '$lib/generated';\n  import GuideInfo from '$lib/components/guides/GuideInfo.svelte';\n  import GuideAuthor from '$lib/components/guides/GuideAuthor.svelte';\n  import { user } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { writable } from 'svelte/store';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import { base } from '$app/paths';\n  import { browser } from '$app/env';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import Button from '@smui/button';\n\n  export let guideId!: string;\n  export let guide: typeof guideQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const deleteGuide = mutation({\n    query: DeleteGuideDocument\n  });\n\n  $: canUserEdit = $user?.roles?.deleteContent || $user?.id === $guide?.data?.getGuide?.user?.id;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteGuideFn = () => {\n    deleteGuide({ guideId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting guide: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/guides');\n      }\n    });\n  };\n\n  $: if (!errorToast) errorMessage = '';\n\n  if (browser) {\n    query(guide);\n  }\n</script>\n\n<svelte:head>\n  {#if !$guide.fetching && !$guide.error && $guide.data.getGuide}\n    <MetaDescriptors description={$guide.data.getGuide.short_description} title={$guide.data.getGuide.name} />\n  {/if}\n</svelte:head>\n\n{#if $guide.fetching}\n  <p>Loading...</p>\n{:else if $guide.error}\n  <p>Oh no... {$guide.error.message}</p>\n{:else if $guide.data.getGuide}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl  font-bold\">{$guide.data.getGuide.name}</h1>\n\n      <div>\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/guide/' + guideId + '/edit')}>Edit</Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-rows-min gap-4\">\n      <Card class=\"h-fit\">\n        <Content>\n          <div class=\"markdown-content break-words\">\n            {#await markdown($guide.data.getGuide.guide) then guideRendered}\n              <p>{@html guideRendered}</p>\n            {/await}\n          </div>\n        </Content>\n      </Card>\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <GuideInfo guide={$guide.data.getGuide} />\n        <GuideAuthor author={$guide.data.getGuide.user} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title>Delete Guide?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this guide</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteGuideFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n\n<style lang=\"postcss\">\n  @media (min-width: 1279px) {\n    .grid-auto-max {\n      grid-template-columns: auto max-content;\n    }\n  }\n</style>\n"],"names":[],"mappings":"igCAYuC,KAAM,sDAFH,4CAEtB,6HAFsB,4FAEtB,sKAHhB,SACE,qBAEA,OAAM,4BAAmD,2BAAxB,KAAM,wpBARhC,oLCaqE,KAAO,0DAN/C,uGAOzB,oGAPyB,sSAOzB,uNAHuE,KAAO,4BAEzE,aAAY,KAAO,gPAPrC,SACE,qBAEA,OACE,OACE,cACA,OACE,qBACA,4DAH4E,KAAO,wCAEb,KAAO,oCAAnE,aAAY,KAAO,ypBAZ5B,wMCgEqB,KAAO,KAAK,SAAS,wBAA0B,KAAO,KAAK,SAAS,oHAApE,KAAO,KAAK,SAAS,iCAA0B,KAAO,KAAK,SAAS,oIAuD7E,mBAAA,+EA5Cc,KAAO,KAAK,SAAS,0CAG/C,4GAiBa,KAAO,KAAK,oCACT,KAAO,KAAK,SAAS,cAK3C,wFAcgB,2BAAA,w9BA1CrB,SACE,OACE,qBAEA,6BAOF,0BAUE,4GAnBiC,KAAO,KAAK,SAAS,iBAG/C,yLAiBa,KAAO,KAAK,8CACT,KAAO,KAAK,SAAS,gBAK3C,uLAcgB,sUA5CR,KAAO,MAAM,qCAAvB,yDAAA,2CAAH,2CAAa,KAAO,MAAM,2FAFvB,mDAAA,mCAAH,msBAU+F,oBAAA,6EAChB,sBAAA,6GASzD,iFAAV,2CAAU,4MADJ,GAAS,KAAO,KAAK,SAAS,oLADxC,gGACU,GAAS,KAAO,KAAK,SAAS,keAc3B,wBAAA,2MAAA,iJACV,6BAAA,sFAKqE,sBAAA,+EACZ,sBAAA,2TAHtD,gLAAA,0LADR,SACE,64BAUC,8CAAA,2BAAP,kCAAO,wDArDH,KAAO,WAAa,KAAO,OAAS,KAAO,KAAK,iEAKnD,MAAO,WAEF,KAAO,QAEP,KAAO,KAAK,qSATd,KAAO,WAAa,KAAO,OAAS,KAAO,KAAK,gWA9DhD,IAAS,GAAe,IAAoB,MAAO,SAE5C,GAAO,QAAqB,IACvC,IAAO,UAAU,MAAQ,EAAM,OAAO,QAC/B,IACL,MAAO,KACN,iIAqBM,cACA,kBAEP,GAAe,GACf,EAAa,QAEX,GAAc,IAClB,MAAO,KAKH,EAAmB,GAAkB,6BAErC,QACJ,GAAc,YAAW,KAAM,IACzB,EAAM,MACR,SAAQ,MAAM,EAAM,MAAM,aAC1B,EAAe,yBAA2B,EAAM,MAAM,aACtD,EAAa,KAGb,GAAK,GAAO,cAQhB,GAAM,eAqB2C,GAAK,GAAO,UAAY,EAAU,eAClC,EAAiB,IAAI,UA4BrB,EAAiB,IAAI,UACrB,kBAP9B,2BAaA,mIA7ElB,EAAc,GAAO,OAAO,eAAiB,GAAO,KAAO,GAAQ,MAAM,UAAU,MAAM,kBAiBpF,QAAY,EAAe"}