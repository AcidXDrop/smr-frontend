{"version":3,"file":"index.svelte-5131c876.js","sources":["../../../../../../../src/lib/components/users/UserInfo.svelte","../../../../../../../src/lib/components/users/UserAvatar.svelte","../../../../../../../src/routes/user/[userId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n\n  export let user!: Pick<User, 'created_at'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <!-- TODO Nice Date -->\n      <span><strong>Created:</strong> {user.created_at}</span><br />\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import { assets } from '$app/paths';\n\n  export let avatar!: string;\n  export let username!: string;\n\n  $: userAvatar = avatar || assets + '/images/no_image.png';\n\n  // TODO Outdated Flag\n</script>\n\n<div>\n  <!-- TODO Fallback to default Logo -->\n  <img class=\"rounded-lg max-w-lg\" src={userAvatar} alt=\"Avatar for {username}\" />\n</div>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetUserDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Button from '@smui/button';\n\n  const userQ = operationStore(GetUserDocument, { user: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    userQ.variables.user = input.page.params.userId;\n    return loadWaitForNoFetch({\n      user: userQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { query } from '@urql/svelte';\n  import UserInfo from '$lib/components/users/UserInfo.svelte';\n  import UserAvatar from '$lib/components/users/UserAvatar.svelte';\n  import ModCard from '$lib/components/mods/ModCard.svelte';\n  import GuideCard from '$lib/components/guides/GuideCard.svelte';\n  import { user as me } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import { browser } from '$app/env';\n\n  export let user: typeof userQ;\n\n  let guidesTab = false;\n\n  if (browser) {\n    query(user);\n  }\n</script>\n\n<svelte:head>\n  {#if !$user.fetching && !$user.error && $user.data.getUser}\n    <MetaDescriptors\n      description=\"{$user.data.getUser.username} profile\"\n      title=\"{$user.data.getUser.username} profile\"\n    />\n  {/if}\n</svelte:head>\n\n{#if $user.fetching}\n  <p>Loading...</p>\n{:else if $user.error}\n  <p>Oh no... {$user.error.message}</p>\n{:else if $user.data.getUser}\n  <div class=\"grid gap-8 grid-auto-max\">\n    <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n      <div class=\"grid grid-flow-col grid-auto-max h-auto gap-4 items-center\">\n        <h1 class=\"text-4xl my-4 font-bold\">{$user.data.getUser.username}</h1>\n\n        {#if $me && $user.data.getUser.id === $me.id}\n          <Button variant=\"outlined\" href=\"{base}/settings\">Settings</Button>\n        {/if}\n\n        <Button variant=\"outlined\" on:click={() => (guidesTab = !guidesTab)}>\n          {#if !guidesTab}\n            Guides\n          {:else}\n            Mods\n          {/if}\n        </Button>\n      </div>\n      {#if !guidesTab}\n        <div class=\"grid 3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1 gap-4\">\n          {#each $user.data.getUser.mods as mod}\n            <ModCard mod={mod.mod} />\n          {/each}\n\n          {#if $user.data.getUser.mods.length === 0}\n            <!-- TODO Prettier -->\n            User has no mods\n          {/if}\n        </div>\n      {:else}\n        <div class=\"grid 3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1 gap-4\">\n          {#each $user.data.getUser.guides as guide}\n            <GuideCard {guide} logo={$user.data.getUser.avatar} />\n          {/each}\n\n          {#if $user.data.getUser.guides.length === 0}\n            <!-- TODO Prettier -->\n            User has no guides\n          {/if}\n        </div>\n      {/if}\n    </div>\n    <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n      <UserAvatar avatar={$user.data.getUser.avatar} username={$user.data.getUser.username} />\n      <UserInfo user={$user.data.getUser} />\n    </div>\n  </div>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n\n<style lang=\"postcss\">\n  .grid-auto-max {\n    grid-template-columns: auto max-content max-content;\n  }\n</style>\n"],"names":["user"],"mappings":"o7BAYuC,KAAK,sDAFF,4CAEtB,6HAFsB,4FAEtB,sKAHhB,SACE,qBAEA,OAAM,4BAAkD,2BAAvB,KAAK,wpBAR5C,uVCSwC,8CAA6B,cAFrE,SAEE,kCAAsC,8CAA6B,sEAVrE,aACA,qIAEA,EAAA,GAAA,GAAA,kSCkCoB,MAAM,KAAK,QAAQ,8BACzB,MAAM,KAAK,QAAQ,uIADb,MAAM,KAAK,QAAQ,uCACzB,MAAM,KAAK,QAAQ,oJAyDR,mBAAA,iFA5CoB,KAAM,KAAK,QAAQ,wCAEnD,MAAO,KAAM,KAAK,QAAQ,KAAO,KAAI,uJAYtC,+DAyBc,KAAM,KAAK,QAAQ,gBAAkB,KAAM,KAAK,QAAQ,kCAC5D,KAAM,KAAK,s1BA3C/B,SACE,OACE,OACE,oFAsCJ,qEAtCyC,KAAM,KAAK,QAAQ,qBAEnD,MAAO,KAAM,KAAK,QAAQ,KAAO,KAAI,sTAqCxB,KAAM,KAAK,QAAQ,yBAAkB,KAAM,KAAK,QAAQ,4CAC5D,KAAM,KAAK,8PA7ClB,KAAM,MAAM,qCAAtB,yDAAA,2CAAH,2CAAa,KAAM,MAAM,2FAFtB,mDAAA,mCAAH,sHAU0C,qTAAgB,wBAAA,iFAM5C,oBAAA,6EAFS,sBAAA,sFAAT,yNAoBC,KAAM,KAAK,QAAQ,4BAAxB,4EAIG,KAAM,KAAK,QAAQ,OAAO,SAAW,oSAL5C,iGACS,KAAM,KAAK,QAAQ,yBAAxB,oHAAA,gCAIG,KAAM,KAAK,QAAQ,OAAO,SAAW,gFAJxC,yJAXK,KAAM,KAAK,QAAQ,0BAAxB,4EAIG,KAAM,KAAK,QAAQ,KAAK,SAAW,oSAL1C,iGACS,KAAM,KAAK,QAAQ,uBAAxB,oHAAA,gCAIG,KAAM,KAAK,QAAQ,KAAK,SAAW,gFAJtC,6LAYyB,KAAM,KAAK,QAAQ,mIAAnB,KAAM,KAAK,QAAQ,sIAIvB,kCAAA,0GAfP,KAAI,2GAAJ,KAAI,mIAIG,gCAAA,uFArCzB,KAAM,WAAa,KAAM,OAAS,KAAM,KAAK,gEAQhD,MAAM,WAED,KAAM,QAEN,KAAM,KAAK,qSAZb,KAAM,WAAa,KAAM,OAAS,KAAM,KAAK,+VA9BrD,IAAA,GAAA,IAAA,KAAA,SAEA,GAAA,QAAA,IACA,IAAA,UAAA,KAAA,EAAA,KAAA,OAAA,OACA,IACA,KAAA,KACA,kIAcAA,YAEA,GAAA,GAGA,GAAAA,mBA2BoD,GAAa"}