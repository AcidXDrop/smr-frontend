{"version":3,"file":"edit.svelte-f4fb31ed.js","sources":["../../../../../../../src/routes/mod/[modId]/edit.svelte"],"sourcesContent":["<svelte:head>\n  {#if !$mod.fetching && !$mod.error && $mod.data.getMod}\n    <MetaDescriptors \n      description=\"Editing mod {$mod.data.getMod.name}\"\n      title=\"Edit mod {$mod.data.getMod.name}\" \n      image={$mod.data.getMod.logo}\n    />\n  {/if}\n</svelte:head>\n\n<script lang=\"ts\" context=\"module\">\n  import {paramsToProps} from \"$lib/utils/routing\";\n\n  export const load = paramsToProps();\n</script>\n\n<script lang=\"ts\">\n  import {mutation, operationStore, query} from '@urql/svelte';\n  import {EditModDocument, GetModDocument} from \"$lib/generated\";\n  import Toast from \"$lib/components/general/Toast.svelte\";\n  import {goto} from '$app/navigation';\n  import ModForm from \"$lib/components/mods/ModForm.svelte\";\n  import type {ModData} from \"$lib/models/mods\";\n  import {base} from \"$app/paths\";\n  import MetaDescriptors from \"$lib/components/utils/MetaDescriptors.svelte\";\n\n  export let modId!: string;\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const mod = operationStore(\n    GetModDocument,\n    {mod: modId}\n  );\n\n  const editMod = mutation({\n    query: EditModDocument\n  });\n\n  const onSubmit = (data: ModData) => {\n    editMod({\n      modId: modId,\n      mod: data\n    }).then(value => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error editing mod: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/mod/' + value.data.updateMod.id);\n      }\n    });\n  }\n\n  $: if (!errorToast) errorMessage = '';\n\n  $: initialValues = $mod.data ? {\n    ...$mod.data.getMod,\n    logo: undefined\n  } : undefined;\n\n  query(mod);\n</script>\n\n<h1 class=\"text-4xl my-4 font-bold\">Edit Mod</h1>\n\n{#if $mod.fetching}\n  <p>Loading...</p>\n{:else if $mod.error}\n  <p>Oh no... {$mod.error.message}</p>\n{:else}\n  <ModForm onSubmit={onSubmit} initialValues={initialValues} editing={true} submitText=\"Save\"/>\n{/if}\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n"],"names":["ctx","data","getMod","name","logo","ctx2","error","message","fetching","load","paramsToProps","modId","errorMessage","errorToast","mod","operationStore","GetModDocument","editMod","mutation","query","EditModDocument","initialValues","$mod","Object","assign","then","value","base","updateMod","id"],"mappings":"45BAGgCA,KAAKC,KAAKC,OAAOC,uBAC1BH,KAAKC,KAAKC,OAAOC,WAC3BH,KAAKC,KAAKC,OAAOE,mIAFEC,KAAKJ,KAAKC,OAAOC,gCAC1BE,KAAKJ,KAAKC,OAAOC,oBAC3BE,KAAKJ,KAAKC,OAAOE,sJAoETJ,mBAAyBA,cAAwB,qIAAxBK,0HAF/BL,KAAKM,MAAMC,mCAArB,yDAAA,sFAAUF,KAAKC,MAAMC,0FAFrB,mDAAA,gIAQIP,8CAAAA,4DAAAK,iEA5EDL,KAAKQ,WAAaR,KAAKM,OAASN,KAAKC,KAAKC,yDAmE7CG,KAAKG,WAEAH,KAAKC,oHAMMN,iBAAAA,gGAVe,mMAAA,2PAjE5BK,KAAKG,UAAaH,KAAKC,QAASD,KAAKJ,KAAKC,mUA2E7BG,iMA/DNI,EAAOC,qCAaTC,KAEPC,EAAe,GACfC,GAAa,QAEXC,EAAMC,EACVC,GACCF,IAAKH,+BAGFM,EAAUC,GACdC,MAAOC,aA0BHN,4EAPED,OAAYD,EAAe,uBAEhCS,EAAgBC,EAAKrB,KAAMsB,OAAAC,OAAAD,OAAAC,UACzBF,EAAKrB,KAAKC,SACbE,UAAM,SACJ,sBAnBOO,MAAAA,EACPG,IAAKb,IACJwB,UACGC,EAAMpB,eACAA,MAAMoB,EAAMpB,MAAMC,aAC1BK,EAAe,sBAAwBc,EAAMpB,MAAMC,aACnDM,GAAa,MAGRc,EAAO,QAAUD,EAAMzB,KAAK2B,UAAUC"}