{"version":3,"file":"index.svelte-7211150a.js","sources":["../../../../../../src/lib/components/guides/GuideGrid.svelte","../../../../../../src/routes/guides/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { operationStore, query } from '@urql/svelte';\n  import { GetGuidesDocument } from '$lib/generated';\n  import GuideCard from './GuideCard.svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { writable } from 'svelte/store';\n  import { base } from '$app/paths';\n  import Button from '@smui/button';\n  import { user } from '$lib/stores/user';\n\n  export let colCount: 4 | 5 = 4;\n  export let newGuide = false;\n\n  // TODO Selectable\n  const perPage = 40;\n\n  const guides = operationStore(GetGuidesDocument, { offset: 0, limit: perPage });\n\n  const page = writable(1);\n  let totalGuides: number;\n\n  page.subscribe((p) => {\n    $guides.variables.offset = (p - 1) * perPage;\n    $guides.reexecute();\n  });\n\n  $: totalGuides = $guides?.data?.getGuides?.count || 0;\n\n  query(guides);\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n</script>\n\n<div class=\"mb-5 ml-auto flex justify-between\">\n  {#if newGuide && $user !== null}\n    <Button variant=\"outlined\" href=\"{base}/new-guide\">New Guide</Button>\n  {/if}\n\n  <div>\n    <PageControls totalPages={Math.ceil(totalGuides / perPage)} currentPage={page} />\n  </div>\n</div>\n\n{#if $guides.fetching}\n  <p>Loading...</p>\n{:else if $guides.error}\n  <p>Oh no... {$guides.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $guides.data.getGuides.guides as guide}\n      <GuideCard {guide} logo={guide.user.avatar} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <PageControls totalPages={Math.ceil(totalGuides / perPage)} currentPage={page} />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import GuideGrid from '$lib/components/guides/GuideGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Guides for Satisfactory and modding Satisfactory\" title=\"Guides\" />\n</svelte:head>\n\n<GuideGrid newGuide={true} colCount={4} />\n"],"names":[],"mappings":"61BAsCsC,sTAAiB,yBAAA,yEAc5C,KAAQ,KAAK,UAAU,4BAA5B,wQADc,uBAAlB,2EACS,KAAQ,KAAK,UAAU,yBAA5B,qHAAA,yDADc,6DACd,8IAHS,KAAQ,MAAM,qCAAxB,yDAAA,2CAAH,2CAAa,KAAQ,MAAM,4FAFxB,mDAAA,mCAAH,0GAM6B,KAAM,KAAK,mIAAX,KAAM,KAAK,+IAhBnC,MAAY,OAAU,sCAKC,KAAK,KAAK,KAAc,eAAuB,sDAIxE,MAAQ,WAEH,KAAQ,kEAYY,KAAK,KAAK,KAAc,eAAuB,2fAxB7E,+BAKE,iDAiBF,SACE,kCAtBK,MAAY,OAAU,+HAKC,KAAK,KAAK,KAAc,uLAkBxB,KAAK,KAAK,KAAc,mNA9CtD,GAAA,wDAJA,WAAA,MACA,WAAA,WAKA,GAAA,EAAA,IAAA,OAAA,EAAA,MAAA,4BAEA,GAAA,GAAA,MACA,GAEA,SAAA,UAAA,QACA,EAAA,UAAA,OAAA,GAAA,GAAA,KACA,EAAA,cAKA,EAAA,uHAFA,EAAA,GAAA,MAAA,WAAA,OAAA,uBAIA,EACA,GAAA,EACA,6DACA,qTCxBqB,YAAgB"}