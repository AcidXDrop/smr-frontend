{"version":3,"file":"__layout.svelte-e93f52ca.js","sources":["../../../../../src/lib/stores/global.ts","../../../../../src/lib/core/graphql.ts","../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../src/routes/__layout.svelte"],"sourcesContent":["import { writable } from 'svelte/store';\nimport type { Client } from '@urql/svelte';\n\nexport const loginDialogOpen = writable<boolean>(false);\n\nexport const gqlClient = writable<undefined | Client>(undefined);\n","import schema from '$lib/generated/graphql.schema.urql.json';\nimport type { Client } from '@urql/svelte';\nimport { createClient } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedFetchExchange } from '@urql/exchange-persisted-fetch';\nimport { multipartFetchExchange } from '@urql/exchange-multipart-fetch';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { Operation } from '@urql/core';\nimport type { LoadInput } from '@sveltejs/kit/types/page';\nimport { get } from 'svelte/store';\n\ninterface SMRAuthState {\n  token: string | null;\n}\n\nexport const initializeGraphQLClient = (fetch?: LoadInput['fetch']): Client => {\n  return createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange({\n        addAuthToOperation(params: { authState: SMRAuthState | null; operation: Operation }): Operation {\n          if (!params.authState || !params.authState.token) {\n            return params.operation;\n          }\n\n          const fetchOptions =\n            typeof params.operation.context.fetchOptions === 'function'\n              ? params.operation.context.fetchOptions()\n              : params.operation.context.fetchOptions || {};\n\n          return {\n            ...params.operation,\n            context: {\n              ...params.operation.context,\n              fetchOptions: {\n                ...fetchOptions,\n                headers: {\n                  ...fetchOptions.headers,\n                  Authorization: params.authState.token\n                }\n              }\n            }\n          };\n        },\n        getAuth: async (): Promise<SMRAuthState | null> => {\n          return {\n            token: get(userToken)\n          };\n        },\n        didAuthError({ error }): boolean {\n          return error.message.indexOf('user not logged in') >= 0;\n        }\n      }),\n      persistedFetchExchange({\n        preferGetForPersistedQueries: true\n      }),\n      multipartFetchExchange\n    ]\n  });\n};\n","<script lang=\"ts\">\n  import { loginDialogOpen } from '$lib/stores/global';\n  import {\n    GetMeDocument,\n    GetOAuthOptionsDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { browser } from '$app/env';\n  import { page } from '$app/stores';\n  import { goto } from '$app/navigation';\n  import Toast from '../general/Toast.svelte';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import Dialog, { Title, Content } from '@smui/dialog';\n  import Button from '@smui/button';\n  import CircularProgress from '@smui/circular-progress';\n\n  const logoutMutation = mutation({\n    query: LogoutDocument\n  });\n\n  if (browser) {\n    const getMe = operationStore(GetMeDocument, undefined, {\n      pause: true\n    });\n\n    query(getMe);\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        logoutMutation(undefined, {\n          requestPolicy: 'network-only'\n        })\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.reexecute({\n          requestPolicy: 'network-only',\n          fetchOptions: {\n            cache: 'no-cache'\n          }\n        });\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              // TODO Toast or something\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: mutation({\n      query: OAuthGithubDocument\n    }),\n    google: mutation({\n      query: OAuthGoogleDocument\n    }),\n    facebook: mutation({\n      query: OAuthFacebookDocument\n    })\n  };\n\n  let errorMessage = '';\n  let errorToast = false;\n  let signingIn = false;\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams['code'];\n    const state = queryParams['state'];\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      loginDialogOpen.set(true);\n\n      signInMethods[signInMethod as 'github' | 'google' | 'facebook']({\n        code,\n        state\n      })\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            errorMessage = 'Error logging in: ' + result.error.message;\n            errorToast = true;\n          } else {\n            userToken.set(result.data.session.token);\n            loginDialogOpen.set(false);\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n\n  const oauthOptions = operationStore(\n    GetOAuthOptionsDocument,\n    { callback_url: '' },\n    {\n      requestPolicy: 'network-only'\n    }\n  );\n\n  $: if ($loginDialogOpen) {\n    oauthOptions.variables.callback_url = encodeURIComponent(window.location.origin + window.location.pathname);\n    query(oauthOptions);\n  }\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n</script>\n\n<Dialog bind:open={$loginDialogOpen}>\n  <Title>Login / Sign Up</Title>\n  <Content>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>Logging in...</p>\n        <div class=\"flex justify-center\">\n          <CircularProgress class=\"h-10 w-10\" indeterminate />\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>Loading...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <Button variant=\"outlined\" on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          Sign in with Github\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          Sign in with Google\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          Sign in with Facebook\n        </Button>\n      {/if}\n    </div>\n  </Content>\n</Dialog>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n","<script lang=\"ts\" context=\"module\">\n  import type { Load } from '@sveltejs/kit';\n  import './_global.postcss';\n  import { base } from '$app/paths';\n  import { initializeGraphQLClient } from '$lib/core';\n  import type { Client } from '@urql/svelte';\n  import { gqlClient } from '$lib/stores/global';\n\n  let client: Client;\n\n  export const load: Load = async ({ fetch }) => {\n    client = initializeGraphQLClient(fetch);\n    gqlClient.set(client);\n    return {};\n  };\n</script>\n\n<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setClient } from '@urql/svelte';\n  import TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\n  import Drawer, { AppContent, Content, Scrim } from '@smui/drawer';\n  import List, { Item, Text, Graphic, Separator } from '@smui/list';\n  import IconButton from '@smui/icon-button';\n  import Button, { Label, Icon } from '@smui/button';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { browser } from '$app/env';\n  import { goto } from '$app/navigation';\n  import { loginDialogOpen } from '$lib/stores/global';\n  import Menu, { MenuComponentDev } from '@smui/menu';\n  import { onMount } from 'svelte';\n  import Switch from '@smui/switch';\n  import FormField from '@smui/form-field';\n  import { customProtocolCheck, hasLauncher, pingLauncher } from '$lib/stores/launcher';\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      if ('cookieconsent' in window) {\n        window['cookieconsent'].initialise({\n          palette: {\n            popup: {\n              background: '#000'\n            },\n            button: {\n              background: '#f1d600'\n            }\n          },\n          theme: 'edgeless',\n          position: 'bottom-right'\n        });\n      }\n\n      customProtocolCheck.set(await import('../lib/utils/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setClient(client);\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  let open = false;\n  let drawerVariant: 'modal' | undefined = 'modal';\n  let hideTopElements = true;\n  if (browser) {\n    const mediaQuery = window.matchMedia('(min-width: 1280px)');\n\n    mediaQuery.addEventListener('change', (data) => {\n      drawerVariant = data.matches ? undefined : 'modal';\n      hideTopElements = !data.matches;\n    });\n\n    drawerVariant = mediaQuery.matches ? undefined : 'modal';\n    hideTopElements = !mediaQuery.matches;\n  }\n\n  let menu: MenuComponentDev;\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#da8517\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n</svelte:head>\n\n<div class=\"app-container\">\n  <TopAppBar variant=\"static\">\n    <Row>\n      <Section>\n        {#if drawerVariant === 'modal'}\n          <IconButton class=\"material-icons\" on:click={() => (open = !open)}>menu</IconButton>\n        {/if}\n        <Title>FICSIT Augmentation Database</Title>\n      </Section>\n      {#if !hideTopElements}\n        <Section align=\"end\" toolbar>\n          {#if $hasLauncher}\n            <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={pingLauncher}>\n              <Label>Launcher Detected</Label>\n              <Icon class=\"material-icons\">file_download</Icon>\n            </Button>\n          {:else}\n            <Button\n              color=\"secondary\"\n              variant=\"outlined\"\n              class=\"mr-3\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://smm.ficsit.app\"\n            >\n              <Label>Mod Manager</Label>\n              <Icon class=\"material-icons\">file_download</Icon>\n            </Button>\n          {/if}\n\n          {#if $user === null}\n            <Button color=\"secondary\" variant=\"outlined\" on:click={() => loginDialogOpen.set(true)}>\n              <Label>Sign In</Label>\n              <Icon class=\"material-icons\">login</Icon>\n            </Button>\n          {:else}\n            {#if isAdmin}\n              <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={() => goto(base + '/admin')}>\n                <Label>Admin</Label>\n                <Icon class=\"material-icons\">admin_panel_settings</Icon>\n              </Button>\n            {/if}\n\n            <div>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                on:click={() => menu.setOpen(true)}\n                class=\"grid grid-flow-col\"\n              >\n                <div class=\"mr-3\">{$user.username}</div>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Button>\n\n              <Menu bind:this={menu}>\n                <List>\n                  <Item on:SMUI:action={() => goto(base + '/user/' + $user.id)}>\n                    <Text>Profile</Text>\n                  </Item>\n                  <Item on:SMUI:action={() => goto(base + '/settings')}>\n                    <Text>Settings</Text>\n                  </Item>\n                  <Item on:SMUI:action={() => userToken.set(null)}>\n                    <Text>Logout</Text>\n                  </Item>\n                </List>\n              </Menu>\n            </div>\n          {/if}\n        </Section>\n      {/if}\n    </Row>\n  </TopAppBar>\n\n  <div class=\"drawer-container\">\n    <Drawer variant={drawerVariant} fixed={false} bind:open>\n      <Content>\n        <div class=\"drawer-content\">\n          {#if hideTopElements}\n            <List>\n              {#if $user === null}\n                <Item on:click={() => loginDialogOpen.set(true)}>\n                  <Graphic class=\"material-icons\">login</Graphic>\n                  <Text>Sign In</Text>\n                </Item>\n              {:else}\n                {#if isAdmin}\n                  <Item on:click={() => goto(base + '/admin')} activated={currentPath.startsWith('/admin')}>\n                    <Graphic class=\"material-icons\">admin_panel_settings</Graphic>\n                    <Text>Admin</Text>\n                  </Item>\n                {/if}\n\n                <Item on:click={() => goto(base + '/user/' + $user.id)} activated={currentPath.startsWith('/user')}>\n                  <Graphic>\n                    <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n                  </Graphic>\n                  <Text>{$user.username}</Text>\n                </Item>\n\n                <Item on:click={() => userToken.set(null)}>\n                  <Graphic class=\"material-icons\">logout</Graphic>\n                  <Text>Logout</Text>\n                </Item>\n              {/if}\n            </List>\n\n            <Separator />\n          {/if}\n\n          <List>\n            <Item href=\"{base}/\" activated={currentPath === '/'}>\n              <Graphic class=\"material-icons\">home</Graphic>\n              <Text>Home</Text>\n            </Item>\n            <Item href=\"{base}/mods\" activated={currentPath.startsWith('/mods')}>\n              <Graphic class=\"material-icons\">extension</Graphic>\n              <Text>Mods</Text>\n            </Item>\n            <Item href=\"{base}/guides\" activated={currentPath.startsWith('/guides')}>\n              <Graphic class=\"material-icons\">description</Graphic>\n              <Text>Guides</Text>\n            </Item>\n            <Item href=\"{base}/sml-versions\" activated={currentPath.startsWith('/sml-versions')}>\n              <Graphic class=\"material-icons\">lightbulb</Graphic>\n              <Text>SML Versions</Text>\n            </Item>\n            <Item href=\"{base}/tools\" activated={currentPath.startsWith('/tools')}>\n              <Graphic class=\"material-icons\">apps</Graphic>\n              <Text>Tools</Text>\n            </Item>\n            <Item href=\"https://discord.gg/xkVJ73E\" target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">people</Graphic>\n              <Text>Discord</Text>\n            </Item>\n            <Item href=\"https://docs.ficsit.app/\" target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">find_in_page</Graphic>\n              <Text>Docs</Text>\n            </Item>\n          </List>\n\n          <List>\n            <Item href=\"{base}/help\" activated={currentPath.startsWith('/help')}>\n              <Graphic class=\"material-icons\">help</Graphic>\n              <Text>Help</Text>\n            </Item>\n            <Item href=\"{base}/privacy-policy\" activated={currentPath.startsWith('/privacy-policy')}>\n              <Graphic class=\"material-icons\">policy</Graphic>\n              <Text>Privacy Policy</Text>\n            </Item>\n            <Item href=\"{base}/tos\" activated={currentPath.startsWith('/tos')}>\n              <Graphic class=\"material-icons\">gavel</Graphic>\n              <Text>Terms of Service</Text>\n            </Item>\n            <Item href=\"{base}/api-docs\" activated={currentPath.startsWith('/api-docs')}>\n              <Graphic class=\"material-icons\">api</Graphic>\n              <Text>API</Text>\n            </Item>\n            {#if hideTopElements}\n              <Item target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n                <Graphic class=\"material-icons\">file_download</Graphic>\n                <Text>Mod Manager</Text>\n              </Item>\n            {/if}\n            <Item>\n              <FormField align=\"end\">\n                <Switch bind:checked={accessibility} />\n                <span slot=\"label\">Accessibility Font</span>\n              </FormField>\n            </Item>\n          </List>\n        </div>\n      </Content>\n    </Drawer>\n\n    {#if drawerVariant === 'modal'}\n      <Scrim fixed={false} />\n    {/if}\n\n    <AppContent class=\"app-content w-full overflow-auto py-6 px-3\">\n      <main class=\"main-content\">\n        <slot />\n      </main>\n    </AppContent>\n  </div>\n</div>\n\n<LoginDialog />\n\n<style lang=\"postcss\">\n  .app-container {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    height: 100vh;\n    max-height: 100vh;\n    width: 100vw;\n    max-width: 100vw;\n  }\n\n  .drawer-container {\n    display: flex;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n\n  .drawer-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n</style>\n"],"names":["createClient","get","cookie"],"mappings":"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"}