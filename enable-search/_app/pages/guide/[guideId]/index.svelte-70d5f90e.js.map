{"version":3,"file":"index.svelte-70d5f90e.js","sources":["../../../../../../../src/lib/components/guides/GuideInfo.svelte","../../../../../../../src/lib/components/guides/GuideAuthor.svelte","../../../../../../../src/routes/guide/[guideId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { Guide } from '$lib/generated';\n\n  export let guide!: Pick<Guide, 'created_at'>;\n</script>\n\n<div class=\"text-lg\">\n  <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n  <!-- TODO Nice Date -->\n  <span><strong>Created:</strong> {guide.created_at}</span><br />\n</div>\n","<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import { base } from '$app/paths';\n\n  export let author: Pick<User, 'id' | 'username' | 'avatar'>;\n</script>\n\n<div class=\"grid grid-flow-row gap-y-6\">\n  <h3 class=\"text-2xl my-4 font-bold\">Author</h3>\n\n  <div class=\"grid auto-rows-min text-lg gap-y-4\">\n    <div class=\"grid grid-flow-col auto-cols-min gap-x-4\">\n      <div class=\"rounded-full bg-cover w-14 h-14\" style={`background-image: url(\"${author.avatar}\")`} />\n      <div class=\"grid grid-flow-row\">\n        <a href=\"{base}/user/{author.id}/\" class=\"text-yellow-500 underline\">{author.username}</a>\n        <div>Writer</div>\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetGuideDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n\n  const guideQ = operationStore(GetGuideDocument, { guide: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    guideQ.variables.guide = input.page.params.guideId;\n    return loadWaitForNoFetch({\n      guide: guideQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation, query } from '@urql/svelte';\n  import { DeleteGuideDocument } from '$lib/generated';\n  import GuideInfo from '$lib/components/guides/GuideInfo.svelte';\n  import GuideAuthor from '$lib/components/guides/GuideAuthor.svelte';\n  import { user } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { writable } from 'svelte/store';\n  import Dialog from '$lib/components/general/Dialog.svelte';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import { base } from '$app/paths';\n  import { browser } from '$app/env';\n\n  export let guideId!: string;\n  export let guide: typeof guideQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const deleteGuide = mutation({\n    query: DeleteGuideDocument\n  });\n\n  $: canUserEdit = $user?.roles?.deleteContent || $user?.id === $guide?.data?.getGuide?.user?.id;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteGuideFn = () => {\n    deleteGuide({ guideId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting guide: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/guides');\n      }\n    });\n  };\n\n  $: if (!errorToast) errorMessage = '';\n\n  if (browser) {\n    query(guide);\n  }\n</script>\n\n<svelte:head>\n  {#if !$guide.fetching && !$guide.error && $guide.data.getGuide}\n    <MetaDescriptors description={$guide.data.getGuide.short_description} title={$guide.data.getGuide.name} />\n  {/if}\n</svelte:head>\n\n{#if $guide.fetching}\n  <p>Loading...</p>\n{:else if $guide.error}\n  <p>Oh no... {$guide.error.message}</p>\n{:else if $guide.data.getGuide}\n  <div class=\"grid gap-8 grid-auto-max\">\n    <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n      <div class=\"grid grid-flow-col grid-auto-max h-auto gap-4 items-center\">\n        <h1 class=\"text-4xl my-4 font-bold\">{$guide.data.getGuide.name}</h1>\n\n        {#if canUserEdit}\n          <button\n            class=\"py-2 px-4 rounded text-base bg-yellow-600\"\n            on:click={() => goto(base + '/guide/' + guideId + '/edit')}>\n            Edit\n          </button>\n          <button class=\"py-2 px-4 rounded text-base bg-red-500\" on:click={() => deleteDialogOpen.set(true)}>\n            Delete\n          </button>\n        {/if}\n      </div>\n      <div class=\"markdown-content\">\n        {#await markdown($guide.data.getGuide.guide) then guideRendered}\n          <p>{@html guideRendered}</p>\n        {/await}\n      </div>\n    </div>\n    <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n      <GuideInfo guide={$guide.data.getGuide} />\n      <GuideAuthor author={$guide.data.getGuide.user} />\n    </div>\n  </div>\n\n  <Dialog bind:open={$deleteDialogOpen}>\n    <div class=\"grid grid-flow-row gap-4\">\n      <h3 class=\"text-2xl font-bold\">Delete Guide?</h3>\n\n      <span>Are you sure you wish to delete this guide</span>\n\n      <button class=\"py-1 px-4 rounded text-base bg-yellow-600\" on:click={() => deleteDialogOpen.set(false)}>\n        Cancel\n      </button>\n      <button class=\"py-1 px-4 rounded text-base bg-red-500\" on:click={() => deleteGuideFn()}> Delete </button>\n    </div>\n  </Dialog>\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n\n<style lang=\"postcss\">\n  .grid-auto-max {\n    grid-template-columns: auto max-content max-content;\n  }\n</style>\n"],"names":["ctx","created_at","ctx2","guide","username","avatar","id","author","data","getGuide","short_description","name","markdown","user","error","message","fetching","__awaiter","thisArg","_arguments","P","generator","guideQ","operationStore","GetGuideDocument","load","paramsToProps","variables","input","page","params","guideId","loadWaitForNoFetch","_a","_b","_c","_d","errorMessage","errorToast","deleteGuide","mutation","query","DeleteGuideDocument","deleteDialogOpen","writable","deleteGuideFn","then","value","base","canUserEdit","$user","roles","deleteContent","$guide","goto","set"],"mappings":"m/BASmCA,KAAMC,kDAFH,4CAEtB,6HAFsB,4FAEtB,oQAAmBC,KAAMD,2EAN5BE,iLCWiEH,KAAOI,gDAN/C,uGAOzB,oGAPyB,sSAOzB,uNAHuEJ,KAAOK,oCAE7DL,KAAOM,mYAF+CJ,KAAOG,wCAEbH,KAAOE,4CAAvDF,KAAOI,6EAVxBC,4LC+DqBP,KAAOQ,KAAKC,SAASC,wBAA0BV,KAAOQ,KAAKC,SAASE,oHAApET,KAAOM,KAAKC,SAASC,iCAA0BR,KAAOM,KAAKC,SAASE,oIAsD7E,mBAAA,mHA1CoBX,KAAOQ,KAAKC,SAASE,UAErDX,0HAYGY,EAASZ,KAAOQ,KAAKC,SAASN,gCAMtBH,KAAOQ,KAAKC,oCACTT,KAAOQ,KAAKC,SAASI,wFAI3Bb,cAAAA,qHAaEA,kBAAAA,ixCAtCsBA,KAAOQ,KAAKC,SAASE,iBAErDX,mFAYGY,EAASZ,KAAOQ,KAAKC,SAASN,mDAMtBH,KAAOQ,KAAKC,8CACTT,KAAOQ,KAAKC,SAASI,yFAI3Bb,yGAaEA,6UA3CRA,KAAOc,MAAMC,mCAAvB,yDAAA,sFAAUb,KAAOY,MAAMC,2FAFvB,mDAAA,6IAYkE,gCAGqC,qEAHrC,wEAGqC,yWAOxFf,oHAAAE,yKAYiB,uCAEzB,sEAEgG,kCAGd,oGAPzD,uEAEzB,8GAEgG,0EAGd,6cAKnFF,8CAAAA,6DAAAE,wDApDHF,KAAOgB,WAAahB,KAAOc,OAASd,KAAOQ,KAAKC,kEAKnDP,KAAOc,WAEFd,KAAOY,QAEPZ,KAAOM,KAAKC,mSATdP,KAAOc,UAAad,KAAOY,QAASZ,KAAOM,KAAKC,mWAlEtBQ,YAAAC,EAAAC,EAAAC,EAAAC,2RAO1BC,GAASC,EAAeC,GAAoBrB,WAAO,IAE5CsB,GAAOC,MAA8BT,+CACzCU,UAAUxB,MAAQyB,EAAMC,KAAKC,OAAOC,QACpCC,GACL7B,MAAOmB,IADFU,CAEJJ,kFAIUK,EAAAC,EAAAC,EAAAC,oEAcJL,YACA5B,aAEPkC,EAAe,GACfC,GAAa,QAEXC,EAAcC,GAClBC,MAAOC,IAKHC,EAAmBC,GAAkB,8BAErCC,UACUd,QAAAA,IAAWe,UACnBC,EAAMjC,eACAA,MAAMiC,EAAMjC,MAAMC,aAC1BsB,EAAe,yBAA2BU,EAAMjC,MAAMC,aACtDuB,GAAa,MAGRU,EAAO,iBAQV7C,6HApBL8C,GAA0B,WAAZhB,EAAAiB,MAAAA,SAAAA,EAAOC,iBAAKlB,SAAAA,EAAEmB,gCAAiBF,EAAO5C,OAAmC,YAA5B8B,EAAsB,YAAtBD,EAAY,YAAZD,EAAAmB,MAAAA,SAAAA,EAAQ7C,gBAAI0B,SAAAA,EAAEzB,oBAAQ0B,SAAAA,EAAEtB,gBAAIuB,SAAAA,EAAE9B,oBAiBpFgC,OAAYD,EAAe,uCA0BTiB,EAAKN,EAAO,UAAYjB,EAAU,aAGmBY,EAAiBY,KAAI,OAuBtBZ,EAAiBY,KAAI,OAGxBV"}