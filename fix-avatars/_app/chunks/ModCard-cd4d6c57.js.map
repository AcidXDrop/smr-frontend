{"version":3,"file":"ModCard-cd4d6c57.js","sources":["../../../../../src/lib/components/mods/ModCard.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { Mod } from '$lib/generated';\n  import downloadIcon from '@iconify/icons-mdi/download.js';\n  import eyeIcon from '@iconify/icons-mdi/eye.js';\n  import openInNewIcon from '@iconify/icons-mdi/open-in-new.js';\n  import { assets, base } from '$app/paths';\n  import Icon from '@iconify/svelte';\n  import { getImageCornerColors } from '$lib/utils/image';\n\n  export let mod: Pick<Mod, 'id' | 'name' | 'logo' | 'views' | 'downloads' | 'short_description'>;\n  export let expanded = false;\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  $: logo = mod.logo || assets + '/images/no_image.png';\n\n  let hovering = false;\n\n  $: shouldExpand = expanded || hovering;\n\n  let logoElement: HTMLImageElement;\n  let activeBackground: string | undefined;\n  let light = false;\n\n  let loading = false;\n  $: {\n    if (shouldExpand && logoElement && !loading) {\n      loading = true;\n      if (logoElement.naturalWidth != 0 && logoElement.naturalHeight != 0) {\n        getImageCornerColors(logoElement).then((color) => {\n          activeBackground = color.background;\n          light = color.light;\n        });\n      } else {\n        logoElement.onload = () =>\n          getImageCornerColors(logoElement).then((color) => {\n            activeBackground = color.background;\n            light = color.light;\n          });\n      }\n    }\n  }\n</script>\n\n<div class:h-36={!expanded} class=\"relative\">\n  <div\n    class=\"mod-card shadowed grid grid-flow-row p-3 bg-gray-700 gap-3 relative min-h-full overflow-hidden\"\n    style={shouldExpand && activeBackground ? 'background:' + activeBackground : undefined}\n    class:max-h-72={shouldExpand}\n    class:max-h-36={!shouldExpand}\n    class:z-10={shouldExpand}\n    on:mouseover={() => (hovering = true)}\n    on:mouseleave={() => (hovering = false)}\n    on:focus={() => (hovering = true)}\n    on:focusout={() => (hovering = false)}>\n    <div class=\"top grid grid-flow-col gap-4\">\n      <div class=\"shadowed\">\n        <img bind:this={logoElement} crossorigin=\"anonymous\" src={logo} alt=\"{mod.name} Logo\" />\n      </div>\n      <div>\n        <div>\n          <span class:text-gray-50={!light} class:text-gray-800={light && shouldExpand} class=\"text-xl\"\n            >{mod.name}</span>\n        </div>\n        <div class:text-gray-50={!light} class:text-gray-800={light && shouldExpand} class=\"text-sm\">\n          <span><Icon icon={eyeIcon} inline={true} class=\"inline-block\" /> {mod.views}</span>\n          <span><Icon icon={downloadIcon} inline={true} class=\"inline-block\" /> {mod.downloads}</span>\n        </div>\n      </div>\n    </div>\n    {#if shouldExpand}\n      <div class=\"expanded grid grid-flow-row content-between gap-3\">\n        <div>\n          <span class:text-gray-50={!light} class:text-gray-800={light && shouldExpand} class=\"text-base\"\n            >{mod.short_description}</span>\n        </div>\n        <div class=\"grid grid-flow-col gap-4\">\n          <a href=\"{base}/mod/{mod.id}/\">\n            <button class=\"shadowed py-1 px-4 rounded text-base bg-blue-500\">\n              <span>More info <Icon icon={openInNewIcon} inline={true} class=\"inline-block\" /></span>\n            </button>\n          </a>\n          <!-- TODO SMM Button -->\n          <button class=\"shadowed py-1 px-4 rounded text-base bg-lime-600\">\n            <span>Install <Icon icon={downloadIcon} inline={true} class=\"inline-block\" /></span>\n          </button>\n        </div>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style lang=\"postcss\">\n  .shadowed {\n    box-shadow: 0 5px 15px -5px rgba(0, 0, 0, 1);\n  }\n\n  .mod-card {\n    grid-template-rows: min-content auto;\n\n    & .top {\n      grid-template-columns: 30% auto;\n    }\n  }\n</style>\n"],"names":["ctx","short_description","openInNewIcon","downloadIcon","id","ctx2","name","views","downloads","eyeIcon","logoElement","activeBackground","mod","expanded","hovering","light","loading","logo","assets","shouldExpand","naturalWidth","naturalHeight","then","color","background","onload","getImageCornerColors"],"mappings":"sZAyEcA,KAAIC,iDAKwBC,UAAuB,+CAK3BC,UAAsB,gIALxC,mEAKF,mUALE,uJAKF,8IAXmBH,0BAA4BA,MAASA,4GAI3CA,KAAII,mWAHrBC,KAAIJ,wDADmBI,gCAA4BA,MAASA,iCAI3CA,KAAID,yOAfrBJ,KAAIM,WAG0DN,KAAIO,YACCP,KAAIQ,kCADzDC,UAAiB,+CACjBN,UAAsB,iCAIzCH,m7BAbyDA,qCAAgBM,gGAI7CN,0BAA4BA,MAASA,iDAGxCA,0BAA4BA,MAASA,4MAjB5DA,MAAgBA,KAAmB,cAAgBA,UAAmB,kBAC7DA,sBACCA,iBACLA,0CANEA,8VAagDK,4CAAgBC,kDAKpED,KAAIC,4CADmBD,gCAA4BA,MAASA,2BAIEA,KAAIE,wCACCF,KAAIG,iDAFnDH,gCAA4BA,MAASA,MAM9DA,mIAvBEA,MAAgBA,KAAmB,cAAgBA,UAAmB,yCAC7DA,4BACCA,uBACLA,uBANEA,kNAxBZK,EACAC,OAXOC,eACAC,GAAW,KAKlBC,GAAW,EAMXC,GAAQ,EAERC,GAAU,mHAVXC,EAAOL,EAAIK,MAAQC,EAAS,0CAI5BC,EAAeN,GAAYC,mBAQxBK,GAAgBT,IAAgBM,QAClCA,GAAU,GACsB,GAA5BN,EAAYU,cAAkD,GAA7BV,EAAYW,gBAC1BX,GAAaY,cAChCX,EAAmBY,EAAMC,gBACzBT,EAAQQ,EAAMR,cAGhBL,EAAYe,WACVC,EAAqBhB,GAAaY,cAChCX,EAAmBY,EAAMC,gBACzBT,EAAQQ,EAAMR,6HAcDD,GAAW,WACVA,GAAW,WAChBA,GAAW,WACRA,GAAW"}